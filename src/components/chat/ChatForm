//  Julie Adams 
// This module gets the state from the api and update the state when chat is edited


import { useEffect, useState } from "react"
import { Navigate, useNavigate } from "react-router-dom"

export const ChatForm = () => {
    /*
        TODO: Add the correct default properties to the
        initial state object
    */
    const [chat, update] = useState({
       message: "",
          })
    /*
         the useNavigation() hook so redirect
        the user to the message list
    */
    const navigate = useNavigate()

    const localActiveUser = localStorage.getItem("activeUser")
    const activeUserObject = JSON.parse(localActiveUser)

    const handleSaveButtonClick = (event) => {
        event.preventDefault()

        // TODO: Create the object to be saved to the API
    const messageToSendToAPI = {
        userId: activeUserObject.id,
        message: chat.message,
        dateCompleted: ""
    }

        // Perform the fetch() to POST the object to the API
    
        return fetch(`http://localhost:8088/messages`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json"            
        },
        body: JSON.stringify(messsageToSendToAPI)
    })
            .then(response => response.json())
            .then(() => {
                navigate("/messages")
            })
    }

    return (
        <form className="chatForm">
            <h2 className="chatForm__title">New Message</h2>
            <fieldset>
                <div className="form-group">
                    <label htmlFor="message">Message:</label>
                    <input
                        required autoFocus
                        type="text"
                        className="form-control"
                        placeholder="Type new message"
                        value={messages.message}
                        onChange={
                            (evt) => {
                                const copy = {...message}
                                copy.message = evt.target.value
                                update(copy)
                            }
                        } />
                </div>
            </fieldset>
            {/* <fieldset>
                <div className="form-group">
                    <label htmlFor="name">Emergency:</label>
                    <input type="checkbox"
                        value={ticket.emergency}
                        onChange={
                            (evt) => {
                                const copy = {...ticket}
                                copy.emergency = evt.target.checked
                                update(copy)
                            }       
                         } />
                </div>
            </fieldset>             */}
            <button 
                onClick={(clickEvent) => handleSaveButtonClick(clickEvent)}
                className="btn btn-primary">
                Submit Message
            </button>
        </form>
    )
}